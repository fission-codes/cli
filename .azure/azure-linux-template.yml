jobs:
- job: ${{ parameters.name }}
  pool:
    vmImage: ${{ parameters.vmImage }}
  strategy:
    matrix:
      stack-def:
        BUILD: stack
        STACK_YAML: stack.yaml
  steps:
    - script: |
        mkdir -p ~/.local/bin
        curl -L https://get.haskellstack.org/stable/linux-x86_64.tar.gz | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'
      displayName: Install Stack
    - script: |
        sudo apt-get update &&
        sudo apt-get -y install postgresql libpq-dev
      displayName: Install postgresql

    - script: |
        export PATH=$HOME/.local/bin:$PATH
        stack --no-terminal --install-ghc test --only-dependencies --copy-bins --local-bin-path $(System.DefaultWorkingDirectory)
        mv $(System.DefaultWorkingDirectory)/fission-cli-exe $(System.DefaultWorkingDirectory)/fission-cli-${{ parameters.vmImage }}
      displayName: Build Dependencies
    - script: |
        export PATH=$HOME/.local/bin:$PATH
        # Build the package, its tests, and its docs and run the tests
        stack test
      displayName: Test ${{parameters.os}} Package
    - task: GitHubRelease@0
      displayName: 'GitHub release (edit)'
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/pipeline-deploy'))
      inputs:
        gitHubConnection: fission-cli-deploy
        repositoryName: '$(Build.Repository.Name)'
        action: edit
        tag: 'v$(Build.SourceVersion)'
        title: '$(Build.SourceVersion)'
        releaseNotesSource: input
        assets: '$(System.DefaultWorkingDirectory)/fission-cli-*'
        assetUploadMode: replace
        isDraft: true