jobs:
- job: ${{ parameters.name }}
  pool:
    vmImage: ${{ parameters.vmImage }}
  strategy:
    matrix:
      stack-def:
        BUILD: stack
        STACK_YAML: stack.yaml
  steps:
  - script: |
      export STACK_ROOT="$(Build.SourcesDirectory)"/.stack-root;
      mkdir -p ~/.local/bin
      curl -skL https://get.haskellstack.org/stable/osx-x86_64.tar.gz | tar xz --strip-components=1 --include '*/stack' -C ~/.local/bin;
      export PATH=$HOME/.local/bin:$PATH
    displayName: Install Stack

  - script: |
      brew update && brew install postgres
    displayName: Install Postgres

  - script: |
      export PATH=$HOME/.local/bin:$PATH
      stack --no-terminal --install-ghc test --only-dependencies --copy-bins --local-bin-path $(Build.SourcesDirectory)
      mv $(Build.SourcesDirectory)/fission-cli-exe $(Build.SourcesDirectory)/fission-cli-${{ parameters.vmImage }}
    displayName: Build Dependencies

  - script: |
      export PATH=$HOME/.local/bin:$PATH
      stack test
    displayName: Test ${{parameters.os}} Package
  - task: GitHubRelease@0
    displayName: 'GitHub release (edit)'
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/pipeline-deploy'))
    inputs:
      gitHubConnection: fission-suite
      repositoryName: '$(Build.Repository.Name)'
      action: edit
      tag: 'v$(Build.SourceVersion)'
      title: '$(Build.SourceVersion)'
      releaseNotesSource: input
      assets: '$(Build.SourcesDirectory)/fission-cli-*'
      assetUploadMode: replace
      isDraft: true
